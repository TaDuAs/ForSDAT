classdef DAAppClassFactoryBuilder < Simple.App.ClassFactoryBuilder
    %DAAPPclassFactoryBUILDER Summary of this class goes here
    %   Detailed explanation goes here
    
    properties
    end
    
    methods
        function initFactory(this, classFactory)
            import Simple.*;
            this.initFactory@Simple.App.ClassFactoryBuilder(classFactory);
            
            classFactory.addConstructor('Simple.Scientific.PEG', @(data) Simple.Scientific.PEG(data.Mw));
            classFactory.addConstructor('Simple.Scientific.Peptide', @(data) Simple.Scientific.Peptide(data.sequence));
            function out = BuildAnalyzedFDCData(data)
                pos = getobj(data, 'pos');
                if ~isempty(pos)
                    x = pos(1);
                    y = pos(2);
                    i = -1;
                else
                    x = getobj(data, 'posx', -1);
                    y = getobj(data, 'posy', -1);
                    i = getobj(data, 'posi', -1);
                end
                
                out = ForSDAT.Core.AnalyzedFDCData(data.f,...
                    data.z,...
                    data.slope,...
                    data.file,...
                    getobj(data, 'lr'),...
                    getobj(data, 'noise'),...
                    x, y, i);
            end
            classFactory.addConstructor('ForSDAT.Core.AnalyzedFDCData',@BuildAnalyzedFDCData);
                
            % FDC Analyzer
            classFactory.addConstructor('ForSDAT.Core.Adjusters.FDCurveOOMAdjuster', @(data) ForSDAT.Core.Adjusters.FDCurveOOMAdjuster(data.FOOM, data.ZOOM));
            classFactory.addConstructor('ForSDAT.Core.Adjusters.DataSmoothingAdjuster',...
                @(data) ForSDAT.Core.Adjusters.DataSmoothingAdjuster(data.span,...
                            data.algorithm,...
                            getobj(data, 'degree'),...
                            getobj(data, 'edgeNonSmoothRange'),...
                            getobj(data, 'useXValues')));
            classFactory.addConstructor('ForSDAT.Core.Tasks.AdjustmentTask',...
                @(data) ForSDAT.Core.Tasks.AdjustmentTask(...
                    data.adjuster, ...
                    data.xChannel,...
                    data.yChannel,...
                    data.segment,...
                    data.shouldAdjustOriginalData, ...
                    data.shouldAffectOriginalData,...
                    getobj(data, 'outputXChannel'),...
                    getobj(data, 'outputYChannel')));
            
            classFactory.addConstructor('ForSDAT.Core.Adjusters.LongWaveDisturbanceAdjusterBeta',...
                @(data) ForSDAT.Core.Adjusters.LongWaveDisturbanceAdjusterBeta(...
                    struct2cell(data.fittingRangeParams),...
                    data.fourierSeriesOrder,...
                    data.fitToSegmentId,...
                    data.fixSegmentId));
            classFactory.addConstructor('ForSDAT.Core.Adjusters.OpticalOscillationInterferenceAdjuster',...
                @(data) ForSDAT.Core.Adjusters.OpticalOscillationInterferenceAdjuster(...
                    struct2cell(data.fittingRangeParams),...
                    data.fitToSegmentId,...
                    data.fixSegmentId));
                
            classFactory.addConstructor('ForSDAT.Core.Tasks.LongWaveAdjustTask',...
                @(data) ForSDAT.Core.Tasks.LongWaveAdjustTask(data.adjuster, data.xChannel, data.yChannel, data.segment));
            
            classFactory.addConstructor('ForSDAT.Core.Baseline.SimpleBaselineDetector',...
                @(data) ForSDAT.Core.Baseline.SimpleBaselineDetector(data.fragment,...
                            data.stdScore,...
                            data.isBaselineTilted_value));
            classFactory.addConstructor('ForSDAT.Core.Baseline.HistogramBaselineDetector',...
                @(data) ForSDAT.Core.Baseline.HistogramBaselineDetector(data.binningMethod,...
                            data.gaussFitOpts.fitR2Threshold,...
                            data.stdScore,...
                            data.gaussFitOpts.order,...
                            data.minimalBins));
            classFactory.addConstructor('ForSDAT.Core.Baseline.CompositeBaselineDetector',...
                @(data) ForSDAT.Core.Baseline.CompositeBaselineDetector(data.primary,...
                            data.secondary,...
                            data.stdThreshold));
            classFactory.addConstructor('ForSDAT.Core.Tasks.BaselineDetectorTask',@(data) ForSDAT.Core.Tasks.BaselineDetectorTask(data.detector, data.baselineOffsetFactorMultiplier, data.xChannel, data.yChannel, data.segment, getobj(data, 'applyToYChannels')));
            classFactory.addConstructor('ForSDAT.Core.Contact.ContactPointDetector',...
                @(data) ForSDAT.Core.Contact.ContactPointDetector(data.fragment,...
                            data.iterativeApproachR2Threshold,...
                            data.isSorftSurface));
            classFactory.addConstructor('ForSDAT.Core.Tasks.ContactPointDetectorTask',@(data) ForSDAT.Core.Tasks.ContactPointDetectorTask(data.detector, data.xChannel, data.yChannel, data.segment, data.shouldEstimateCantileverSpringConstant));
            classFactory.addConstructor('ForSDAT.Core.RawDataAnalyzer',...
                @(data) ForSDAT.Core.RawDataAnalyzer(data.pipeline));
            classFactory.addConstructor('ForSDAT.Core.Adjusters.TipHeightAdjuster', @(data) ForSDAT.Core.Adjusters.TipHeightAdjuster(data.springConstant, data.foom, data.doom));
            classFactory.addConstructor('ForSDAT.Core.Tasks.TipHeightAdjustTask', @(data) ForSDAT.Core.Tasks.TipHeightAdjustTask(data.adjuster, data.shouldEstimateCantileverSpringConstant, data.xChannel, data.yChannel, data.segment));
            classFactory.addConstructor('ForSDAT.Core.Ruptures.RuptureDetector', @(data) ForSDAT.Core.Ruptures.RuptureDetector(data.baselineDetector, data.stepSlopeDeviation));
            classFactory.addConstructor('ForSDAT.Core.Tasks.RuptureEventDetectorTask',...
                @(data) ForSDAT.Core.Tasks.RuptureEventDetectorTask(...
                    data.ruptureDetector, ...
                    data.xChannel, ...
                    data.yChannel, ...
                    data.segment, ...
                    data.loadingDomainDetector));
%             classFactory.addConstructor('ForSDAT.Core.Ruptures.WLCSolutionFitter', @(data) ForSDAT.Core.Ruptures.WLCSolutionFitter(data.T, data.loadingRateFitRange, data.polynomialOrder));
            classFactory.addConstructor('ForSDAT.Core.Ruptures.WLCLoadFitter', @(data) ForSDAT.Core.Ruptures.WLCLoadFitter(data.T));
            classFactory.addConstructor('ForSDAT.Core.NoiseAnomally', @(data) ForSDAT.Core.NoiseAnomally(data.Length, data.Speed, data.SamplingRate));
            classFactory.addConstructor('ForSDAT.Core.Ruptures.NoiseOffsetLoadingDomainDetector', @(data) ForSDAT.Core.Ruptures.NoiseOffsetLoadingDomainDetector());
            classFactory.addConstructor('ForSDAT.Core.Ruptures.PreviousRuptureEndLoadingDomain', @(data) ForSDAT.Core.Ruptures.PreviousRuptureEndLoadingDomain());
            classFactory.addConstructor('ForSDAT.Core.Tasks.ChainFitTask', @(data) ForSDAT.Core.Tasks.ChainFitTask(...
                data.chainFitter, ...
                data.smoothingAdjuster, ...
                data.xChannel,...
                data.yChannel,...
                data.segment,...
                getobj(data, 'ruptureChannel'),...
                data.plotChainfitFromContactPoint));
            classFactory.addConstructor('ForSDAT.Core.Ruptures.InteractionWindowSMIFilter', ...
                @(data) ForSDAT.Core.Ruptures.InteractionWindowSMIFilter(data.acceptedRange));
            classFactory.addConstructor('ForSDAT.Core.Tasks.InteractionWindowTask',...
                @(data) ForSDAT.Core.Tasks.InteractionWindowTask(data.filter, ...
                    data.xChannel, ...
                    data.yChannel, ...
                    data.segment));
            classFactory.addConstructor('ForSDAT.Core.Ruptures.BaselineThresholdSMIFilter', @(data) ForSDAT.Core.Ruptures.BaselineThresholdSMIFilter(data.angleDefiningSeparationFromContactDomain));
            classFactory.addConstructor('ForSDAT.Core.Ruptures.SmoothingSMIFilter', @(data) ForSDAT.Core.Ruptures.SmoothingSMIFilter(data.baselineDetector, data.smoothingAdjuster, data.angleDefiningSeparationFromContactDomain));
            classFactory.addConstructor('ForSDAT.Core.Tasks.SMIFilterTask',...
                @(data) ForSDAT.Core.Tasks.SMIFilterTask(...
                    data.filter, ...
                    data.xChannel, ...
                    data.yChannel, ...
                    data.segment, ...
                    getobj(data, 'secondaryXChannel'),...
                    getobj(data, 'ruptureChannel'),...
                    getobj(data, 'prefilteredRuptureChannel')));
%             classFactory.addConstructor('ForceDistanceSegment', @(data) ForSDAT.Core.ForceDistanceSegment(data.index, data.name, data.springConstant, data.sensitivity, data.force, data.distance, data.time));
            classFactory.addConstructor('ForSDAT.Core.ForceDistanceSegment', @(data) ForSDAT.Core.ForceDistanceSegment(...
                data.index, data.name, data.springConstant, data.sensitivity,...
                data.force, data.distance, data.time, ...
                getobj(data, 'xPosition'), getobj(data, 'yPosition'), getobj(data, 'curveIndex')));
            classFactory.addConstructor('ForSDAT.Core.ForceDistanceCurve', @(data) ForSDAT.Core.ForceDistanceCurve(data.segments));
            classFactory.addConstructor('ForSDAT.Core.ForceDistanceSegment', ...
                @(data) ForSDAT.Core.ForceDistanceSegment(...
                            getobj(data, 'index'), ...
                            getobj(data, 'name'),...
                            getobj(data, 'springConstant'), ...
                            getobj(data, 'sensitivity'), ...
                            getobj(data, 'force'), ...
                            getobj(data, 'distance'), ...
                            getobj(data, 'time'), ...
                            getobj(data, 'xPos'), ...
                            getobj(data, 'yPos'), ...
                            getobj(data, 'curveIndex')));
            
            classFactory.addConstructor('ForSDAT.Application.IO.JpkFDCDataAccessor', @(data) ForSDAT.Application.IO.JpkFDCDataAccessor(data.wantedSegments, data.shouldFlipExtendSegments, data.exporter, data.batchPath, getobj(data, 'processedResultsPath'), getobj(data, 'errorLogPath')));
            classFactory.addConstructor('ForSDAT.Application.IO.ForceDistanceCurveParser', @(data) ForSDAT.Application.IO.ForceDistanceCurveParser(data.shouldFlipExtendSegments));
            classFactory.addConstructor('ForSDAT.Core.StepsDataAnalyzer', @(data) ForSDAT.Core.StepsDataAnalyzer(...
                data.binningMethod,...
                data.minimalBins,...
                getobj(data, 'model'),...
                getobj(data, 'fitR2Threshold'), ...
                getobj(data, 'alpha')));
            classFactory.addConstructor('ForSDAT.Application.Workflows.SMICookedDataAnalyzer', @(data) ForSDAT.Application.Workflows.SMICookedDataAnalyzer(data.dataAnalyzer));
            
        end
    end
    
end

