classdef PipelineTaskTemplate < mvvm.ITemplate
    %PIPELINETASKTEMPLATE Summary of this class goes here
    %   Detailed explanation goes here
    
    properties
        ResourcePath;
        ViewTaskImage;
        EditTaskImage;
        ModelProvider;
    end
    
    methods
        function this = PipelineTaskTemplate(resourcesPath, modelProvider)
            this.ModelProvider = modelProvider;
            this.ResourcePath = resourcesPath;
            this.ViewTaskImage = sui.getIconCData(fullfile(resourcesPath, 'Tasks', 'display.png'), [255 255 255], [28, 28]);
            this.EditTaskImage = sui.getIconCData(fullfile(resourcesPath, 'Tasks', 'edit.png'), [255 255 255], [28, 28]);
        end
        
        function h = build(this, scope, container)
            task = scope.getModel();
            h.box = uipanel('Parent', container, 'Units', 'pixels', 'Position', [1 1 98 64], 'BackgroundColor', [1 1 1]);
            
            taskImg = sui.getIconCData(fullfile(this.ResourcePath, 'Tasks', [task.name '.png']), [255 255 255], [60, 60]);
%             h.taskButtonBox = uipanel(h.box, 'Units', 'pixels', 'Position', [16 1 64 64], 'BackgroundColor', [1 1 1]);
            h.taskButton = uicontrol('Style', 'pushbutton', 'Parent', h.box, ...
                'Units', 'pixels', ...
                'Position', [1 1 64 64],...
                'BackgroundColor', [1 1 1],...
                'CData', taskImg);
            h.showAllCmd = mvvm.Command('viewAndEditTask', h.taskButton, 'Callback',...
                'Params', { scope },...
                'ModelProvider', this.ModelProvider);
            
            h.deleteButton = uicontrol('style', 'pushbutton', 'Parent', h.box,...
                'Units', 'pixels', ...
                'Position', [1, 49, 15, 15],...
                'String', 'x',...
                'BackgroundColor', [255 10 10] / 255,...
                'ForegroundColor', [1 1 1]);
            h.deleteButtonCmd = mvvm.Command('removeTask', h.deleteButton, 'Callback',...
                'Params', { mvvm.providers.ScopeKeyCommandParameter(scope) },...
                'ModelProvider', this.ModelProvider);
            
%             h.editBox = uipanel(h.box, 'Units', 'pixels', 'Position', [79 32 32 32], 'BackgroundColor', [1 1 1]);
            h.editTask = uicontrol('Style', 'pushbutton', ...
                'Parent', h.box, ...
                'Units', 'pixels',...
                'Position', [65 32 31 32],...
                'BackgroundColor', [1 1 1],...
                'CData', this.EditTaskImage);
            h.editTaskCmd = mvvm.Command('editTask', h.editTask, 'Callback',...
                'Params', { scope },...
                'ModelProvider', this.ModelProvider);
            
%             h.viewBox = uipanel(h.box, 'Units', 'pixels', 'Position', [79 1 32 32], 'BackgroundColor', [1 1 1]);
            h.viewTask = uicontrol('Style', 'pushbutton', ...
                'Parent', h.box, ...
                'Units', 'pixels',...
                'Position', [65 1 31 32],...
                'BackgroundColor', [1 1 1],...
                'CData', this.ViewTaskImage);
            h.viewTaskCmd = mvvm.Command('viewTask', h.viewTask, 'Callback',...
                'Params', { scope },...
                'ModelProvider', this.ModelProvider);
        end
        
        function teardown(this, scope, container, h)
            delete(h.deleteButtonCmd);
            delete(h.deleteButton);
            delete(h.showAllCmd);
            delete(h.taskButton);
%             delete(h.taskButtonBox);
            delete(h.editTaskCmd);
            delete(h.editTask);
%             delete(h.editBox);
            delete(h.viewTaskCmd);
            delete(h.viewTask);
%             delete(h.viewBox);
            delete(h.box);
        end
    end
end

